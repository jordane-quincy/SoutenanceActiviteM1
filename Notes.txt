	I Remerciements

	II Introduction

Le Master TNSI peut être effectué en alternance ce qui permet d'une part de mettre en application les connaissances théoriques
et d'autres part d'avoir un lien fort avec le monde du travail.
Grâce au Groupe OPEN, un des Leader français des services informatique, j'ai eu la chance de reprendre les études afin d'élargir mes compétences 
tout en continuant ma prestation chez notre client Décathlon.

Dans un premier temps nous présenterons le Groupe Open ainsi que l'entreprise Décathlon 
puis nous détaillerons ma mission chez ce client et enfin nous dresserons les enseignements de cette année sur le plan professionnel.
	
	III Présentation des entreprises
	
	# Groupe Open
http://www.open-groupe.com/sites/default/files/historique_open_2014_v3.png
Le Groupe Open est une des premières ESN de france, elle prend racine en 1989 et se développe au point d'entrer en bourse en 1998.
L'audace est une des valeurs d'Open et avec la fusion des SSII Teamlog et Sylis, l'entreprise prends véritablement son envol.
Notre Groupe, résolument tournée vers l'international avec une présence en France, Belgique, Luxembourg et Pays-bas,
partage sa passion avec plus de 3500 collaborateurs

	# Décathlon

Avec plus de 1000 magasins présent dans 29 pays

	IV La mission
Twist est le nom de l'application utilisée par la partie ecommerce des entrepôts de décathlon sur laquelle je travaille.
Cet outil fait partie d'une chaine logicielle permettant la gestion des commandes internet de l'enseigne.
	TODO: schéma simplifié Osmose, SAP, GE, Twist
Son action s'étends de la prise en charge des magnums en provenance du prélévement des articles en entrepôts à l'expédition aux transporteurs.
Pour ce faire nous nous appuyons sur plusieurs processus dont les principaux sont :
La réception : Lorsqu'un article vient a manqué dans un entrepôt CAR, celui ci est commandé sur un entrepôt CAC.
	Une fois arrivé à destination, le terrain scan un code barre pour confirmer sa bonne réception.
Le tri/colisage : Les articles sont stockés par secteurs dans l'entrepôt donc si des commandes contiennent des articles de différents secteurs,
	il faut que ce prélévement soit trié pour dispatcher les articles par commande.
	L'entrepôt peut décider de prélever l'ensemble des articles d'une commande, l'étape de tri n'est plus nécessaire dans ce cas.
	Une fois les articles regroupés par commande, il faut les mettre dans un emballage adéquat (carton ou sachet) avec la facture et générer une étiquette transporteur.
L'expédition : Une fois l'étape de colisage terminée, les colis client sont acheminés dans la zone d'expédition où ils peuvent être associés sur une UAT
	ou directement à une expédition, via le scan du code barre présent sur l'étiquette transporteur.
Twist est un projet née en 2010 et avec plus de 50 développeurs différents, le code source est victime du syndrome du plat de spaghettis
c'est pourquoi j'ai émis l'idée d'un refactoring du coeur du système : le colisage.
Depuis 2013, j'ai mis en évidence les gains qui pouvait être retirés d'un remaniement en profondeur de ce processus dont les principaux sont :
	- gain de performance
	- diminution des bugs
	- évolutions facilitées
Le sujet fut abordées plusieurs fois mais il ne pouvait être réalisé par manque de moyens financier et humain.
L'arrivée d'une nouvelle recrue en provenance d'un des leaders du commerce electronique aller changer la donne.
Ayant côtoyé une autre méthodologie de colisage lors de son précédent travail et ayant apprécié l'efficacité de travail des magasiniers,
il souhaitait la mettre en oeuvre pour Décathlon.
Il chiffra le retour sur investissement ce qui permis de débloquer les moyens afin de lancer les développements de refonte du colisage,
le projet est alors nommée : projet Packman.

	V Les personnes clefs
À l'origine du projet Éric G. est le responsable fonctionnel, c'est lui qui écrit le cahier des charges fonctionnels et qui prends en charge une partie des tests.
Caroline L., elle écrit le cahier des charges technique et suis l'avancement du projet.
L'équipe de développement est composé d'Antoine E. et moi-même.

	
	VI Environnement techniques
		Général
Twist suit le modèle MVC et est construit à l'aide du framework v4, qui est un framework interne de Decathlon lui même basé sur le framework Spring.
GWT s'occupe de la partie Vue tandis que le reste de l'application est en J2E.
		
		GWT
GWT est une boite à outils développé par Google afin de facilité les développements de site utilisant la techologie Ajax 
en apportant au Javascript les outils de développements et de dégogage de Java, en minimisant les écarts entres navigateurs et en facilitant la gestion des appels asynchrones.

		Framework v4
Ce framework interne tente de poser de bonnes bases du développements via l'utilisation de Maven et de Spring.
Il prends en charge une partie de la gestion des droits des utilisateurs, offre un tableau de bord, permet une gestion facilitée des paramètres et des accès aux données.

http://www.open-groupe.com/sites/default/files/valeur.png

		Serveur
Notre application étant utilisée dans 10 pays (pour un total de 24 entrepôts), elle est considérée comme critique d'où la nécessitée d'avoir un load balancing.
Le premier avantage est d'augmenter la tolérance aux pannes et le second est de pouvoir mettre à jour l'application en minimisant l'impact sur le terrain.
A l'heure actuelle, les instances sont réparties sur 6 serveurs différents.
WebLogic est la solution retenue pour déployée nos ear.

		Oracle
Twist utilise le SGBDR Oracle afin de répartir sur 3 serveurs l'ensemble de ses données.
L'utilisation d'hibernate permet de s'affranchir des spécificitées de cette base de données bien que pour certaine manipulation lourde,
des requêtes natives restes privilégiées.
Le framework v4 de Décathlon permet d'obtenir très rapidement des opérations CRUD sur de nouvelles entités ce qui permet un gain 
de productivité important lors de la création de nouvelles tables.

		Infrastructure
Deux datacenters indépendants et situés dans des localisations éloignées, mais dont l'emplacement reste secret pour des raisons évidentes de sécurité,
héberge notre infrastructure, qui se trouve ainsi doublée.
Un DRP est effectué plusieurs fois par an afin d'en valider le fonctionnement, la complétude et l'exactitude.

		Environnements
Nous avons a notre disposition deux environements de Préproduction (dont un réservé au projet Packman) et un de Production.
La gestion des environnements et plus généralement de l'infrastructure est déléguée à deux autres équipes : une en France et une en Chine.
Ce mode de fonctionnement permet d'avoir un support technique joignable 24H/24 par la personne en charge du support Twist le jour ou celle d'astreinte la nuit.

		Impressions
Twist est une application relativement gourmande en impressions, nous utilisons donc des serveurs d'impressions CUPS.
Il y a deux CUPS par instance afin que le second prenne immédiatement la relève en cas de défaillance du premier.

	VII Le projet	

Avant ce projet, la qualité des commandes n'était pas toujours au rendez-vous et cela peut s'expliquer par le fait que 
les contrôles étaient réalisées physiquement et de manière ponctuelles après le colisage, c'est à dire qu'en bout de chaine, la personne ayant effectué
l'emballage devait réouvrir un carton tous les X cartons afin de rescanner l'ensemble des articles pour en valider le contenu.
Cette manière de faire est contraignante pour les magasiniers et coûteuse pour l'entrepôt, que ça soit en temps ou en consommable
car cette opération nécessite la réimpression d'une étiquette transporteur ainsi que du stoch et un nouveau carton.
Grâce à Packman, plus besoin d'éventré un carton destinée à l'expédition. Le sticker transporteur sera imprimé si et seulement si la commande est complète.
En plus d'avoir un effet direct sur la productivité des magasiniers et leur motivation, nous avons ajoutés un feu tricolore dans l'interface afin que l'état
d'avancement d'un processus soit visualisable en direct : 
le feu rouge indique que le système attent une action de l'utilisateur, le feu orange indique un changement et un feu vert signifiant la réussite du processus.

Le terrain n'avait pas d'informations par rapport à l'urgence des commandes donc parfois une commande devant être livrés deux jours plus tard pouvait
être prête à partir avant une commande qui doit être remise au client dans la journée car il n'y avait pas d'ordre à suivre dans le colisage.
D'autre part, certains transporteurs ne font qu'une ramasse par jour alors que d'autres peuvent en faire plusieurs mais rien ne permettait de coliser 
au plus vite les commandes devant être chargés dans un camion arrivant prochainement.
Les clients se plaignaient du décalage entre la promesse faite sur le site et la date de livraison effective.
Afin d'améliorer l'expérience du consommateur, c'est le système qui indique maintenant combien de commandes sont urgentes 
et les plus prioritaires seront colisées en premières.

Dans certains pays, il est obligatoire d'imprimer une ou des factures.
A l'heure actuelle, les factures sont éditées en même temps que le sticker transporteur mais cela ralenti considérablemeent le magasinier qui doit cassé son geste
en prenant d'abord l'étiquette puis attendre plusieurs secondes afin que l'imprimante laser atteigne la température nécessaire pour imprimer les factures d'une commande.
Pour des raisons légales, nous ne pouvons supprimer purement et simplement les factures et le temps de chauffe d'une imprimante laser n'étant pas améliorable de manière logicielle, 
nous avons cherché comment optimiser ce point dans Packman.
Avec notre projet, les temps d'impressions sont à la fois réduits car les factures de toutes les commandes sont éditées en une fois donc nous n'avons qu'une seule phase
de montée de température
et ce temps est également complétement masqués pour l'utilisateur car les tâches d'impressions sont lancées dès le début du tri en parallèle des actions physiques réalisées.



----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Focus technique

	La gestion des kits

L'exemple typique d'un kit est le banc de musculation qui
est généralement divisé en 3 parties qui doivent nécessairement être envoyées ensemble au client.

Voici le déroulement du processus avant Packman :
Le magasinier scan le code barre d'un article ce qui déclenche un appel au serveur qui retourne des informations sur l'article.
La page coté client se charge alors de vérifier s'il s'agit d'un kit et si c'est le cas, fait un second appel au serveur pour
lancer l'impression d'un sticker pour chaque partie du kit et afficher une popup afin de scanner la première partie du kit.
Une fois la première partie du kit scanné, un nouvel appel est fait au serveur pour valider qu'il n'y a pas eu de scan de trop de partie
(dans notre cas, cela vérifie que l'utilisateur n'a pas scanné un code barre de la forme articleCode_XX_03 où XX est supérieur à 03)
et déplacer y quantité de l'article, y étant 1 divisé par le nombre de partie du kit (ici, la quantité est donc de 0,33333333...).
Avant de retourner coté client, une vérification est faite pour voir si l'ensemble du kit a été scanné en arrondissant 
à 7 chiffres après la virgule la quantité, le but étant à la fin du processus de passé de 3 fois 0,33 soit 0.99 à 1.
Puis le magasinier scan la seconde et la troisième partie du kit.

Avec Packman il était hors de question de faire autant d'appels serveurs et d'arrondis approximatifs.
Voici comment j'ai implémenté la gestion des kits :
Le magasinier scan le code barre d'un article ce qui déclenche un appel au serveur, reconnaissant un kit nous lançons l'impression des stickers
et renvoyons un DTO avec l'article code et le nombre de partie du kit.
Coté client, nous affichons une popup pour scanner les différentes parties du kit.
Connaissant précisément ce que le magasinier doit scanner et dans quel ordre, aucun appel serveur n'est effectué.
Une fois que toutes les parties sont correctement scannées, nous lançons l'appel serveur du scan article avec le nombre de partie du kit qui ont été scannés
(au lieu de 1 dans le cas d'un article non kit), nous pouvons donc côté serveur déplacer 1 quantité de cet article.

	Les armoires

L'armoire est un nouveau concept donc elle a nécessité la création de nouvelles tables.
Voici la composition de la table SHELF 
	identifiant : 
	un code, d'un état, d'un id plateforme, d'une place, d'un id d'entrepôt, d'un type d'armoire et d'un ensemble de racks.
